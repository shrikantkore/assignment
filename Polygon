public class Polygon 
{ 
	
   static int INF = 10000; 
   static class Point  
    { 
        int x; 
        int y; 
        public Point(double e, double d) 
        { 
            this.x = (int) e; 
            this.y = (int) d; 
        } 
    }; 
    
  static boolean segmentPol(Point p,Point q,Point r)  
    { 
        if (q.x <= Math.max(p.x, r.x) &&  q.x >= Math.min(p.x, r.x) &&  q.y <= Math.max(p.y, r.y) &&  q.y >= Math.min(p.y, r.y)) 
        { 
            return true; 
        } 
        return false; 
    } 
    
    static int order(Point a,Point b,Point c)  
    { 
        int val = (b.y - a.y)*(c.x - b.x) -(b.x - a.x)*(c.y - b.y); 
  
        if(val==0)  
        { 
            return 0; 
        } 
        return (val > 0)?1 : 2;  
    } 
  
     
    static boolean interestt(Point p1, Point q1,Point p2, Point q2)  
    { 
       
        int o1 = order(p1, q1, p2); 
        int o2 = order(p1, q1, q2); 
        int o3 = order(p2, q2, p1); 
        int o4 = order(p2, q2, q1); 
  
        
        if(o1 != o2 && o3 != o4) 
        { 
            return true; 
        } 
  
        if(o1 == 0 && segmentPol(p1, p2, q1))  
        { 
            return true; 
        } 
  
       
        if(o2 == 0 && segmentPol(p1, q2, q1))  
        { 
            return true; 
        } 
  
        
        if(o3 == 0 && segmentPol(p2, p1, q2)) 
        { 
            return true; 
        } 
  
        if(o4 == 0 && segmentPol(p2, q1, q2)) 
        { 
            return true; 
        } 
  
        return false;  
    } 
  
  
    static boolean insidePol(Point polygon[], int len, Point p) 
    { 
        
        if (len < 3)  
        { 
            return false; 
        } 
        Point extreme = new Point(INF, p.y); 
        int cnt = 0,i = 0; 
        do 
        { 
            int next = (i + 1)%len; 
  
           
            if (interestt(polygon[i],polygon[next],p,extreme))  
            { 
               
                if (order(polygon[i],p,polygon[next])== 0) 
                { 
                    return segmentPol(polygon[i], p, 
                                     polygon[next]); 
                } 
  
                cnt++; 
            } 
            i = next; 
        } while (i!= 0); 
  
         
        return (cnt%2 == 1); 
    } 
  
    
    public static void main(String[] args)  
    { 
        
        Point polygon1[] = {
        		new Point(1, 0),  
                new Point(8,3), 
                new Point(8,8), 
                new Point(1,5)}; 
        Point p = new Point(3,5); 
        int  len = polygon1.length; 
        if (insidePol(polygon1, len, p)) 
        { 
            System.out.println("True"); 
        }  
        else 
        { 
            System.out.println("False"); 
        } 
        
        Point polygon2[] = {
        		new Point(-3,2),  
                new Point(-2,-0.8), 
                new Point(0,1.2), 
                new Point(2.2,0),
                new Point(2,4.5)}; 
         p = new Point(3,5); 
          len = polygon2.length; 
        if (insidePol(polygon2, len, p)) 
        { 
            System.out.println("True"); 
        }  
        else 
        { 
            System.out.println("False"); 
        } 
    } 
}
